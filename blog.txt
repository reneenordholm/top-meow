Took a few days to figure out what I wanted to do for my project and I wasn't quite clear on how React/Redux worked, so I watched a few tutorials (a bunch, actually) and things started to make sense.  From there I was able to bettter visualize how my database should be set up and get my backend setup and tested.

2/21
- Initial git setup (finally after 4 projects git was easy to set up!  I set up the folder first on git and then cloned it and from there cd'd into the files to create my rails/react initial setup)
- Db setup (had to look up the right command to set up the table rails g resource Cats)
- index route setup and test

2/22
- Setup routes and controllers
- Trick on find by!  Took me a minute to realize object coming in from find by was id and I needed to search for img_id
- Backend is in a good place, I am feeling nervous about moving to the front end!

2/24
- initial front end setup (kept getting errors with npm install, realized i needed to use yarn)
- install dependencies: react-redux, redux, react-router-dom, react-thunk
- initial fetch test, had to change backend port to 3001
- add css template
- setup cats component and catcard container
- fetch setup through thunk/redux

container (still a component): get data from store and render data to components, render other components and pass data-- can have other functions inside (componentDidMount, callbacks, etc); typically are class components because they will have a state

components (presentational): renders data received from container

need to credit expense tracker & quote lab authors

Attaching App to DOM => Render Cats Container => Cats Container renders Cats Component

2/25
- added css styling (need to give credit)

upon page load fetches new cat from cat api

upon like/dislike posts to db

db checks to see if cat already exists

if yes, add/remove like accordingly
return updated like/dislike count
screen displays updated like/dislike count

if no, add cat to db
add/remove like accordingly
return updated like/dislike count
screen displays updated like/dislike count

2/27
- added local state to catlikes; when like/dislike button is pushed the local state updates appropriately and dispatches local state to thunk dispatch post method
- at first I thought I would be rendering a bunch of cats but through third party cat api we render 1 cat at a time and therefore am only rendering one cat--I updated all files and functions to reflect cat rather than cats

2/29
- Moved fetch from Cat API to fetch from db
- Like/dislikes fetching/posting to db corrrectly but not tallying likes/dislikes correctly

3/3
- Likes/dislikes are fetching/posting to db correctly, utilizing redux state correctly, and tallying like count correctly both through db and redux

3/5
- update page title and favicon, had trouble copying over icon file so had to add manually to git repo and then pull down the file from git
- set up nav bar and incorporated browserrouter/react-router-dom
- routes functioning properly!!
- skeleton pages setup for most liked, least liked, and about
- most liked algorithm and skeleton for page complete

routes need to be setup in component that can send props to component